---
title: "Visualizing the Forest Conversion"
subtitle: "INFO 526 - Project 1"
author: 
  - name: "The Plotting Pandas - Megan, Shakir, Maria, Eshaan, Bharath"
    affiliations:
      - name: "School of Information, University of Arizona"
description: "Uncovering Global Deforestation and Soy Bean Consumption - need to change"
format:
   html:
    code-tools: true
    code-overflow: wrap
    code-line-numbers: true
    embed-resources: true
editor: visual
code-annotations: hover
execute:
  warning: false
  echo: false
---

```{r load_packages, message=FALSE, include=FALSE}
# GETTING THE LIBRARIES
if (!require(pacman))
  install.packages(pacman)


pacman::p_load(tidyverse,
               gridExtra,
               tidytuesdayR,
               dplyr,
               janitor,
               dlookr,        # Exploratory data analysis
               here,          # Standardizes paths to data
               formattable,
               ggpubr,
               maps,
               plotly,
               gganimate,
               imager,
               magick,
               gifski)
```

```{r ggplot_setup, message=FALSE, include=FALSE}
#| code-summary: "ggplot theme setup"
# setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14, base_family = "sans"))

# setting width of code output
options(width = 65)

# setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 8,        # 8" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 1,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 140             # higher dpi, sharper image
)
```

```{r load_dataset, message=FALSE, include=FALSE}
# Getting the Data using the tidytuesdayR package 
deforestation_data <- tidytuesdayR::tt_load(2021, week = 15)

# Getting all the underlying data in the dataset
forest        <- deforestation_data$forest
forest_area   <- deforestation_data$forest_area
brazil_loss   <- deforestation_data$brazil_loss
soybean_use   <- deforestation_data$soybean_use
vegetable_oil <- deforestation_data$vegetable_oil
total_forest <- read.csv ("https://raw.githubusercontent.com/INFO526-DataViz/project-01-The-Plotting-Pandas/main/data/forest-area-km.csv")

# Data is read to deforestation_by_source from a raw csv file which is in github , as it is not being downloaded from the tidytuesdayR package.
deforestation_by_source <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-04-06/deforestation_by_source.csv')
```

## Abstract

This project delves into two crucial aspects of global environmental dynamics using the "Global Deforestation" dataset, a comprehensive resource published by Hannah Ritchie and Max Roser in the "Our World in Data" journal in 2021. The dataset encompasses a wide array of attributes related to global forest cover, deforestation rates, and associated factors. Two distinct questions guide our exploration.With a focus on identifying the patterns in forest area conversion, the first question seeks to comprehend how the world's forest cover has changed over the previous three decades. With the help of a choropleth map, we meticulously prepare, clean, and visualize the data in order to clearly depict net forest conversion across the globe. We use the strengths of ggplot and plotly to build an interesting, interactive map that sheds light on the dynamics of forests around the world.The second question investigates the trajectory of soybean production in Brazil and its potential impact on afforestation and deforestation rates. We use the extensive data in the "Global Deforestation" dataset to address this, concentrating on Brazilian soybean output trends. Through data manipulation, we calculate total soybean production, revealing the crop's evolution over time. Employing ggplot, we construct time series plots to showcase soybean production trends and assess their correlation with afforestation and deforestation rates. The period from 1990 to 2013 becomes our focal point, with the possibility of additional insights from the dataset. A bubble plot may also be employed to uncover the nuanced relationship between soybean production and forest changes in Brazil.

## Introduction

The global environment is undergoing profound changes, driven by factors ranging from climate shifts to land use transformations. Within this complex web of interconnected challenges, the fate of the world's forests and the dynamics of soybean production stand as two pivotal and interrelated aspects of environmental change. These subjects are the focus of our investigation, guided by the rich and detailed "Global Deforestation" dataset, a comprehensive resource provided by Hannah Ritchie and Max Roser in the "Our World in Data" journal in 2021. The dataset offers an extensive repository of data, comprising variables such as net forest conversion, year, entity (providing country and continent information), and soybean production statistics. This dataset proves invaluable for analyzing the complex interplay between land use changes, soybean production, and broader conservation efforts. By leveraging advanced data analysis and visualization techniques, this project aims to provide critical insights into the ever-evolving dynamics of global forests and the influence of soybean production, contributing to a better understanding of essential environmental conservation and sustainable land management practices. To summarize, our project uses data analysis and visualization to tackle these crucial environmental issues. We contribute to a deeper knowledge of the fundamental environmental conservation and sustainable land management techniques necessary in our changing world by offering insights into the constantly changing dynamics of global forests and the impact of soybean production.

## Question 1: What does the global forest area look like over past decades, highlighting the trends of forest area conversion?

### Introduction

In the face of global climate change, It is important to understand the dynamics of forest cover conversion. The first question delves into the net forest conversion data from 1990 to 2015, examining the changes decade-wise for various countries across the world. Utilizing data from [tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2021/2021-04-06) and Our World in Data, this study explores the dynamics of forest cover alteration over four crucial decades. By visualizing and analyzing the net forest conversion rates from 1990 to 2015, this study aims to shed light on the evolving state of the world's forests and highlight countries with notable trends in forest expansion and deforestation.

For this visualization we focused on the `forest` dataset provided by Our World in Data. We utilized the `net_forest_converstion` variable as it gave us a significant information on how forest conversion has been over the years.

### Approach

To address this question, we implemented a choropleth map visulization highlighitng the forest conversion for specific decades. We began to scout the data for getting relevant information and noteworthy details. The whole approach can be categorized into Data Preparation, Data pre-processing, Visualizing the data and Animating the plots.

**Data Preparation**

To generate a map plot we needed geographical information which is not present in the dataset, which was achieved by utilizing the `maps` package in R. From this `world` data we retrieved all the unique countries for further process and also filtered out Antarctica from the data.

**Data pre-processing**

A custom function, `process_forest()`, is developed to handle the pre-processing of the forest conversion dataset. This function is used filter countries, ensuring all entities present in the map data are included. It also used to categorize countries based on their `net forest conversion` rates, grouping them into distinct categories. The processed forest conversion data is split into subsets for each decade (1990, 2000, 2010, and 2015). The `split()` function in R is employed to divide the data based on the 'year' column.

A custom function, `filter_countries()`, is created to identify and extract specific countries of interest. These countries are singled out due to their significant forest conversion.

**Visualization the data**

The `ggplot2` package in R is utilized to create detailed visualizations for each decade. For each year, a map is generated where countries are color-coded according to their forest conversion categories. The `geom_map()` function is employed to plot the world map, and additional layers are added to highlight the noteworthy countries, ensuring they stand out in the visual representation.

**Animating the plots**

The individual plots for each decade are compiled into an animated GIF using the `gganimate` package. The resulting GIF provides a dynamic overview of the global forest conversion patterns, emphasizing the transformations occurring over the specified decades.

```{r world_data, message=FALSE, include=FALSE}
# World data from maps
world <- map_data("world")

# Extracting unique countries from the world dataset and storing them in a tibble
unique_countries <- world |>
  select(region) |>       # region is the column which is having country names info
  unique() |>             # getting unique country names
  as_tibble()

# Removing Antarctica from the world data
world <- subset(world, region != "Antarctica")
```

```{r process_forest_function, message=FALSE, include=FALSE}
# function to pre process the forest dataset
# input  : dataset - tibble
#          unique_countries - tibble
# output : filtered_data - tibble

process_forest <- function (dataset, unique_countries) {
  filtered_data <- dataset |>
    # filtering only entity, year and net_forest_conversion columns
    select(entity, year, net_forest_conversion) |>
    # getting all the countires which are not present in forest dataset for a specific years
    # bind_rows() is used combine combine rows of two data frames
    bind_rows(
      # anti_join() is used to return only the rows from the first dataset that isn't having matching rows in the second dataset based on specified key columns
      anti_join(unique_countries, dataset, by = c("region" = "entity")) |>
        # adding year and net_forest_conversion for that specific year as NA
        mutate(year = dataset[1, "year"]$year, net_forest_conversion = NA)
    ) |>
    # renaming USA and UK so that both these countries are matching in world dataset and forest dataset
    mutate(
      entity = case_when(
        entity == "United States" ~ "USA",
        entity == "United Kingdom" ~ "UK",
        TRUE ~ entity
      )
    ) |>
    # creating a categorical variable forest_converstion to group countries based on their forest conversion
    mutate(
      entity = coalesce(entity, region),
      forest_converstion = case_when(
        net_forest_conversion < -400000 ~ "<-400k",
        net_forest_conversion < -200000 ~ "-400k to -200k",
        net_forest_conversion < -100000 ~ "-200k to -100k",
        net_forest_conversion < 0 ~ "-100k to 0",
        net_forest_conversion < 100000 ~ "0 to 100k",
        net_forest_conversion < 200000 ~ "100k to 200k",
        net_forest_conversion < 400000 ~ "200k to 400k",
        is.na(net_forest_conversion) ~ NA_character_,
        TRUE ~ ">400k"
      )
    ) |>
    # ordering forest_converstion column using factors based on the created categories
    mutate(
      forest_converstion = as_factor(forest_converstion) |>
        fct_relevel(
          "<-400k",
          "-400k to -200k",
          "-200k to -100k",
          "-100k to 0",
          "0 to 100k",
          "100k to 200k",
          "200k to 400k",
          ">400k"
        )
    )
  return(filtered_data)
}
```

```{r split_forest_data, message=FALSE, include=FALSE}
# Dividing data into tibbles based on year and it creates a list of tibbles
forest_decades <- split(forest, f = forest$year)

# Implementing the pre processing function on top of the created split tibbles
# lapply() is used for applying a function on top of any list
filtered_forests <- lapply(forest_decades, function(forest_ds) {
  process_forest(forest_ds, unique_countries)
})
```

```{r highlightingCountriesWithmajorChange, message=FALSE, include=FALSE}
# function to filter countries which are having noteworthy forest conversion
# input  : dataset - tibble
#          variable - column character
# output : highlight_data - tibble

filter_countries <- function (dataset, variable){
  highlight_data <- subset(dataset, variable %in% c("Brazil", "Tanzania", "China", "India", "Russia", "USA", "Australia"))
  return(highlight_data)
}

# filtering countries from world dataset using filter_countries
highlight_world <- filter_countries(world, world$region)

# filtering countries from filtered_forests dataset using filter_countries
highlight_filtered_data <- lapply(filtered_forests, function(forest_ds) {
  filter_countries(forest_ds, forest_ds$entity)
})
```

```{r colourMapping, message=FALSE, include=FALSE}
# color mapping for different forest conversion categories
color_mapping <-
  c(
    "<-400k"         = "#d73027",
    "-400k to -200k" = "#f46d43",
    "-200k to -100k" = "#fdae61",
    "-100k to 0"     = "#fee08b",
    "0 to 100k"      = "#d9ef8b",
    "100k to 200k"   = "#a6d96a",
    "200k to 400k"   = "#66bd63",
    ">400k"          = "#1a9850"
  )
```

### Analysis

#### Plotting change in forest cover for the decade `1990`

```{r plotFor1990, message=FALSE}
# Creating the ggplot map plot
# Using the filtered_forests$`1990` dataset created earlier as a data source
# using entity as map_id for first layer
# using forest_convestion as fill aesthetic and word as map for second layer
# using highlight_filtered_data$`1990` as another dataset for creating another map layer
# using entity as map_id,forest_convestion as fill aesthetic and highlight_world as map for third layer

plot_1990 <- ggplot(filtered_forests$`1990`, aes(map_id = entity)) +
  geom_map(
    aes(fill  = forest_converstion),
    map       = world,
    color     = "#B2BEB5",
    linewidth = 0.25,
    linetype  = "blank"
  ) +
  geom_map(data = highlight_filtered_data$`1990`, 
           aes(map_id = entity, 
               fill   = forest_converstion), 
           map   = highlight_world, 
           color = "#71797E", 
           show.legend = F) +
  expand_limits(x = world$long, y = world$lat) +
  scale_fill_manual(values = color_mapping, na.value = "#F2F3F4") +
  coord_fixed(ratio = 1) +
  labs(title    = "Net Forest Conversion by Country in 1990",
       subtitle = "Net change in forest area measures forest expansion minus deforestation",
       caption  = "Data source: Our World in Data",
       fill     = "Net Forest Conversion (hectares)"
       ) +
  theme_void() +
  theme(
    legend.position  = "bottom",
    legend.direction = "horizontal",
    plot.title       = element_text(size = 19, face = "bold", hjust = 0.5),
    plot.subtitle    = element_text(size = 15, color = "azure4", hjust = 0.5),
    plot.caption     = element_text(size = 12, color = "azure4", hjust = 0.95)
  ) +
  guides(
    fill = guide_legend(
      nrow = 1,
      direction = "horizontal",
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom",
      label.hjust = 1,
      label.vjust = 1,
      label.theme = element_text(lineheight = 0.25, size = 9),
      keywidth = 1,
      keyheight = 0.5
    ),
    color = guide_legend("No data", override.aes=list(fill="#F2F3F4"))
  )

plot_1990
ggsave(plot_1990, 
       filename = "images/q1/forest_plot_1990.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

#### Plotting change in forest cover for the decade `2000`

```{r plotFor2000, message=FALSE}
# Creating the ggplot map plot
# Using the filtered_forests$`2000` dataset created earlier as a data source
# using entity as map_id for first layer
# using forest_convestion as fill aesthetic and word as map for second layer
# using highlight_filtered_data$`2000` as another dataset for creating another map layer
# using entity as map_id,forest_convestion as fill aesthetic and highlight_world as map for third layer

plot_2000 <- ggplot(filtered_forests$`2000`, aes(map_id = entity)) +
  geom_map(
    aes(fill  = forest_converstion),
    map       = world,
    color     = "#B2BEB5",
    linewidth = 0.25,
    linetype  = "blank"
  ) +
  geom_map(data = highlight_filtered_data$`2000`, 
           aes(map_id = entity, 
               fill   = forest_converstion), 
           map   = highlight_world, 
           color = "#71797E", 
           show.legend = F) +
  expand_limits(x = world$long, y = world$lat) +
  scale_fill_manual(values = color_mapping, na.value = "#F2F3F4") +
  coord_fixed(ratio = 1) +
  labs(title = "Net Forest Conversion by Country in 2000",
       subtitle = "Net change in forest area measures forest expansion minus deforestation",
       caption = "Data source: Our World in Data",
       fill = "Net Forest Conversion (hectares)"
       ) +
  theme_void() +
  theme(
    legend.position  = "bottom",
    legend.direction = "horizontal",
    plot.title       = element_text(size = 19, face = "bold", hjust = 0.5),
    plot.subtitle    = element_text(size = 15, color = "azure4", hjust = 0.5),
    plot.caption     = element_text(size = 12, color = "azure4", hjust = 0.95)
  ) +
  guides(
    fill = guide_legend(
      nrow = 1,
      direction = "horizontal",
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom",
      label.hjust = 1,
      label.vjust = 1,
      label.theme = element_text(lineheight = 0.25, size = 9),
      keywidth = 1,
      keyheight = 0.5,
    )
  )

plot_2000
ggsave(plot_2000, 
       filename = "images/q1/forest_plot_2000.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

#### Plotting change in forest cover for the decade `2010`

```{r plotFor2010, message=FALSE}
# Creating the ggplot map plot
# Using the filtered_forests$`2010` dataset created earlier as a data source
# using entity as map_id for first layer
# using forest_convestion as fill aesthetic and word as map for second layer
# using highlight_filtered_data$`2010` as another dataset for creating another map layer
# using entity as map_id,forest_convestion as fill aesthetic and highlight_world as map for third layer

plot_2010 <- ggplot(filtered_forests$`2010`, aes(map_id = entity)) +
  geom_map(
    aes(fill  = forest_converstion),
    map       = world,
    color     = "#B2BEB5",
    linewidth = 0.25,
    linetype  = "blank"
  ) +
  geom_map(data = highlight_filtered_data$`2010`, 
           aes(map_id = entity, 
               fill   = forest_converstion), 
           map   = highlight_world, 
           color = "#71797E", 
           show.legend = F) +
  expand_limits(x = world$long, y = world$lat) +
  scale_fill_manual(values = color_mapping, na.value = "#F2F3F4") +
  coord_fixed(ratio = 1) +
  labs(title = "Net Forest Conversion by Country in 2010",
       subtitle = "Net change in forest area measures forest expansion minus deforestation",
       caption = "Data source: Our World in Data",
       fill = "Net Forest Conversion (hectares)"
       ) +
  theme_void() +
  theme(
    legend.position   = "bottom",
    legend.direction  = "horizontal",
    plot.title       = element_text(size = 19, face = "bold", hjust = 0.5),
    plot.subtitle    = element_text(size = 15, color = "azure4", hjust = 0.5),
    plot.caption     = element_text(size = 12, color = "azure4", hjust = 0.95)
  ) +
  guides(
    fill = guide_legend(
      nrow = 1,
      direction = "horizontal",
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom",
      label.hjust = 1,
      label.vjust = 1,
      label.theme = element_text(lineheight = 0.25, size = 9),
      keywidth = 1,
      keyheight = 0.5,
    )
  )

plot_2010
ggsave(plot_2010, 
       filename = "images/q1/forest_plot_2010.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

#### Plotting change in forest cover for the decade `2015`

```{r plotFor2015, message=FALSE}
# Creating the ggplot map plot
# Using the filtered_forests$`2015` dataset created earlier as a data source
# using entity as map_id for first layer
# using forest_convestion as fill aesthetic and word as map for second layer
# using highlight_filtered_data$`2015` as another dataset for creating another map layer
# using entity as map_id,forest_convestion as fill aesthetic and highlight_world as map for third layer

plot_2015 <- ggplot(filtered_forests$`2015`, aes(map_id = entity)) +
  geom_map(
    aes(fill  = forest_converstion),
    map       = world,
    color     = "#B2BEB5",
    linewidth = 0.25,
    linetype  = "blank"
  ) +
  geom_map(data = highlight_filtered_data$`2015`, 
           aes(map_id = entity, 
               fill   = forest_converstion), 
           map   = highlight_world, 
           color = "#71797E", 
           show.legend = F) +
  expand_limits(x = world$long, y = world$lat) +
  scale_fill_manual(values = color_mapping, na.value = "#F2F3F4") +
  coord_fixed(ratio = 1) +
  labs(title = "Net Forest Conversion by Country in 2015",
       subtitle = "Net change in forest area measures forest expansion minus deforestation",
       caption = "Data source: Our World in Data",
       fill = "Net Forest Conversion (hectares)"
       ) +
  theme_void() +
  theme(
    legend.position  = "bottom",
    legend.direction = "horizontal",
    plot.title       = element_text(size = 19, face = "bold", hjust = 0.5),
    plot.subtitle    = element_text(size = 15, color = "azure4", hjust = 0.5),
    plot.caption     = element_text(size = 12, color = "azure4", hjust = 0.95)
  ) +
  guides(
    fill = guide_legend(
      nrow = 1,
      direction = "horizontal",
      title.position = "top",
      title.hjust = 0.5,
      label.position = "bottom",
      label.hjust = 1,
      label.vjust = 1,
      label.theme = element_text(lineheight = 0.25, size = 9),
      keywidth = 1,
      keyheight = 0.5,
    )
  )

plot_2015
ggsave(plot_2015, 
       filename = "images/q1/forest_plot_2015.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

```{r savingas_GIF, message=FALSE}
# making gif using gganimate pacakge

forest_plots <- list.files(path = "images/q1/", full.names = TRUE)
forest_plot_list <- lapply(forest_plots, image_read)

# joining all the saved images
joined_plots <- image_join(forest_plot_list)

# animating the images using image_animate() and restting the resolution
# setting fps = 1
forest_animation <- image_animate(image_scale(joined_plots, "5000x4000"), fps = 1)

# saving image to git
image_write(image = forest_animation, path = "images/world_forestaion.gif")
forest_animation
```

### Discussion

We can observe a significant increase in forest cover `China`, `India`, `Russia`, `USA`, and `Australia` over the past 20 years whereas `Brazil`, `Tanzania` have lost more forest covered area over the past 35 years.

## Question 2: How has the production of Soybean in Africa changed over time, and how does it impact the afforestation or deforestation rates?

### Introduction

### Approach

Cleaning and processing of the dataset includes the following steps:

Soybean production in Brazil:

1.  Created a new column for calculating the total soybean production. Removing totals of countries whose total production is 0 using the `subset` function.
2.  Filtering for Brazil under the `entity` column, and `year` between 1990 and 2013.

Forest coverage in Brazil:

1.  Filtering for `year` between 1990 and 2013 in the `forest_brazil` dataset.
2.  There is a parameter 'World' which shows the overall forest coverage data. Filtering out `entity` as 'World' and `year` between 1990 and 2013, and grouping by year.
3.  Using `left_join` we merge the two tables based on the `year` column.
4.  Since we now have percentage data and total data per year, we can calculate the change in forest coverage for Brazil by doing `forest_area.x` \* `forest_area.y`.

```{r q2_brazil_process, message=FALSE}

#Cleaning total_forest table
total_forest_cleaned <- clean_names(total_forest)

#Making a new column to calculate the total soybean production
soybean <- soybean_use |>
  mutate(total = human_food + animal_feed + processed)
#Some countries do not have production, and shows as 0. 
#Removing the rows if total=0
soybean <- subset(soybean, total != 0)

# Filter data for Brazil
soybean_brazil <- soybean |>
  filter(entity == "Brazil", year>= 1990&year<=2013)

# Filter data for Brazil forest: 
forest_brazil <- forest_area |>
  filter(entity == "Brazil",year>=1990&year<=2013)

#Finding total forest coverage per year
total_forest_world <- total_forest_cleaned |>
  filter(year >= 1990, year <= 2013, entity == "World") |>
  group_by(year)

# Left join to add total world forest coverage to the forest_brazil dataset
forest_brazil <- forest_brazil |>
  left_join(total_forest_world, by = "year")
 
#Finding actual total coverage for Brazil (percentage * total)
forest_brazil <- forest_brazil|>
  mutate(forest_area_brazil = forest_area.x * forest_area.y / 100)

```

### Analysis

\<Analysis\> Plotting the soybean data

```{r q2_plot_soybean, message=FALSE}

# Create a line plot for Brazil soybean production
plot_soybean_brazil <- ggplot(soybean_brazil, aes(x = year, y = total, color = "Brazil")) +
  geom_line(size = 2) +
  geom_point(color = "black") +
  labs(x = "Year", y = "Total (in lb)", title = "Total Soybean Usage Trend in Brazil", caption = "Jon Harmon | TidyTuesday") +
  theme_minimal() +
  theme(legend.position = "none") +
  scale_y_continuous(labels = scales::label_number(scale = 1e-06, suffix = "M")) +
  scale_color_manual(values = c("Brazil" = "cornsilk3")) +
  scale_x_continuous(limits = c(1990, 2013), breaks = seq(1990, 2013, by = 2)) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
plot_soybean_brazil

ggsave(plot_soybean_brazil, 
       filename = "images/q2/plot_soybean_brazil.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

Animating the soybean production graph to show the trends:

```{r q2_plot_soybean_anim, message=FALSE}

# Animate the plot
anim_plot_soybean <- plot_soybean_brazil + transition_reveal(year)

# Save as an animated GIF
anim_save("soybean_brazil_animation.gif", anim_plot_soybean, renderer = gifski_renderer())

# Load the animated GIF
brazil_soybean_animation <- image_read("soybean_brazil_animation.gif")

# Display the animation
brazil_soybean_animation |>
  image_animate(fps = 25) |>
  image_scale("600x400") # Adjust the dimensions as needed

# saving image to git
image_write(image = brazil_soybean_animation, path = "images/soybean_brazil_animation.gif")
```

Plotting the forest coverage in Brazil

```{r q2_plot_forest, message=FALSE}

# Create a line plot for Brazil with points
plot_forest_brazil <- ggplot(forest_brazil, aes(x = year, y = forest_area_brazil, color = "Brazil")) +
  geom_line(size = 2) +
  geom_point(color="blue") + 
  labs(x = "Year", y = "Forest coverage (in hectares)", title = "Total forest cover trend in Brazil", caption= "Jon Harmon | TidyTuesday") +
  theme_minimal() +
  theme(legend.position = "none")+
  scale_color_manual(values = c("Brazil" = "red3"))+
  scale_x_continuous(limits = c(1990, 2013), breaks = seq(1990, 2013, by = 2))+
  scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))

plot_forest_brazil

ggsave(plot_forest_brazil, 
       filename = "images/q2/forest_plot_brazil.jpg", 
       height   = 8, 
       width    = 15, 
       unit     = "in", 
       dpi      = 120)
```

```{r q2_plot_forest_anim, message=FALSE}

# Animate the plot
anim_plot_forest <- plot_forest_brazil + transition_reveal(year)

# Save as an animated GIF
anim_save("forest_brazil_animation.gif", anim_plot_forest, renderer = gifski_renderer())

# Load the animated GIF
brazil_forest_animation <- image_read("forest_brazil_animation.gif")

# Display the animation
brazil_forest_animation |>
  image_animate(fps = 25) |>
  image_scale("600x400") # Adjust the dimensions as needed

# saving image to gift
image_write(image = brazil_forest_animation, path = "images/forest_brazil_animation.gif")
```

### Discussion

\<Discussion\>

## References
