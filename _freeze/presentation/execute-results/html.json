{
  "hash": "6f5dd9db5d6791fa3d0b8749dab5cfca",
  "result": {
    "markdown": "---\ntitle: \"Forests in Transition: Visualizing Global Deforestation\"\nsubtitle: \"INFO 526 - Fall 2023 - Project 1\"\nauthor: \"The Plotting Pandas - Megan, Shakir, Maria, Eshaan, Bharath\"\ntitle-slide-attributes:\n  data-background-image: images/presentation/rainforest_background_4.png\n  data-background-size: stretch\n  data-background-opacity: \"0.8\"\n  data-slide-number: none\nformat:\n  revealjs:\n    theme:  ['data/customtheming.scss']\n    transition: slide\n    background-transition: fade\n    logo: images\\pandas_logo.png\n    footer: \"[üêº The Plotting Pandas](https://info526-dataviz.github.io/project-01-The-Plotting-Pandas/)\"\n    scrollable: true\n\neditor: visual\nexecute:\n  warning: false\n  echo: false\n---\n\n\n\n\n\n\n\n\n## Our Dataset {auto-animate=\"true\"}\n\n-   \"Global Deforestation\" dataset from \"Our World in Data\", [tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2021/2021-04-06).\n\n-   Data looks at global deforestation trends and soybean production in Brazil.\n\n-   Our Data:\n\n    -   `forest` dataset\n    -   `soybean_use` data\n\n## Our Dataset {auto-animate=\"true\"}\n\n::: columns\n::: {.column width=\"70%\"}\n**Aim:** Provide critical insights into the ever-evolving dynamics of global forests and the influence of soybean consumption, contributing to a better understanding of essential environmental conservation and sustainable land management practices.\n:::\n\n::: {.column width=\"30%\"}\n![](images/presentation/groot.gif){fig-align=\"right\" width=\"450\"}\n:::\n:::\n\n## Question 1 {.smaller}\n\n**What does the global forest area look like over past decades?**\n\n-   The primary goal of this presentation is to demonstrate changes in forest cover from 1990 to 2015.\n\n-   Decrease in forest cover over the past few decades.\n\n-   While certain countries show an increase in forest cover, we are still losing our battle against deforestation.\n\n-   International efforts, such as the `United Nations REDD+` program, aim to reduce deforestation.\n\n## Approach {.smaller}\n\n\n\n\n\n-   Getting geographical data from `maps` package\n-   Roots of the approach\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Pre-processing Function\"}\n# function to pre process the forest dataset\n# input  : dataset - tibble\n#          unique_countries - tibble\n# output : filtered_data - tibble\n\nprocessForest <- function (dataset, unique_countries) {\n  filtered_data <- dataset |>\n    # filtering only entity, year and net_forest_conversion columns\n    select(entity, year, net_forest_conversion) |>\n    # getting all the countires which are not present in forest dataset for a specific years\n    # bind_rows() is used combine combine rows of two data frames\n    bind_rows(\n      # anti_join() is used to return only the rows from the first dataset that isn't having matching rows in the second dataset based on specified key columns\n      anti_join(unique_countries, dataset, by = c(\"region\" = \"entity\")) |>\n        # adding year and net_forest_conversion for that specific year as NA\n        mutate(year = dataset[1, \"year\"], net_forest_conversion = NA)\n    ) |>\n    # renaming USA and UK so that both these countries are matching in world dataset and forest dataset\n    mutate(\n      entity = case_when(\n        entity == \"United States\" ~ \"USA\",\n        entity == \"United Kingdom\" ~ \"UK\",\n        TRUE ~ entity\n      )\n    ) |>\n    # creating a categorical variable forest_converstion to group countries based on their forest conversion\n    mutate(\n      entity = coalesce(entity, region),\n      forest_converstion = case_when(\n        net_forest_conversion < -400000 ~ \"<-400k\",\n        net_forest_conversion < -200000 ~ \"-400k to -200k\",\n        net_forest_conversion < -100000 ~ \"-200k to -100k\",\n        net_forest_conversion < 0 ~ \"-100k to 0\",\n        net_forest_conversion < 100000 ~ \"0 to 100k\",\n        net_forest_conversion < 200000 ~ \"100k to 200k\",\n        net_forest_conversion < 400000 ~ \"200k to 400k\",\n        is.na(net_forest_conversion) ~ NA_character_,\n        TRUE ~ \">400k\"\n      )\n    ) |>\n    # ordering forest_converstion column using factors based on the created categories\n    mutate(\n      forest_converstion = as_factor(forest_converstion) |>\n        fct_relevel(\n          \"<-400k\",\n          \"-400k to -200k\",\n          \"-200k to -100k\",\n          \"-100k to 0\",\n          \"0 to 100k\",\n          \"100k to 200k\",\n          \"200k to 400k\",\n          \">400k\"\n        )\n    )\n  return(filtered_data)\n}\n```\n:::\n\n\n\n\n\n\n\n\n-   Leveraging `geom_map()` from ggplot\n-   Branches of the approach\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Function used to generate the plot\"}\n# Function for creating the ggplot map plot\n# Using the filtered_forests$`2000` dataset created earlier as a data source\n# using entity as map_id for first layer\n# using forest_convestion as fill aesthetic and word as map for second layer\n# using highlight_filtered_data$`2000` as another dataset for creating another map layer\n# using entity as map_id,forest_convestion as fill aesthetic and highlight_world as map for third layer\n\n# input  : year - integer\n# output : world_plot - plot object\n\ngenerateForestConversionPlot <- function(year) {\n  world_plot <- ggplot(filtered_forests[[as.character(year)]], aes(map_id = entity)) +\n    geom_map(\n      aes(fill = forest_converstion),\n      map   = world,\n      color = \"#B2BEB5\",\n      linewidth = 0.25,\n      linetype  = \"blank\"\n    ) +\n    geom_map(\n      data = highlight_filtered_data[[as.character(year)]],\n      aes(map_id = entity, fill = forest_converstion),\n      map   = highlight_world,\n      color = \"#71797E\",\n      show.legend = F\n    ) +\n    expand_limits(x = world$long, y = world$lat) +\n    scale_fill_manual(values = color_mapping, na.value = \"#F2F3F4\") +\n    coord_fixed(ratio = 1) +\n    labs(\n      title = paste(\"Net Forest Conversion by Country in\", year),\n      subtitle = \"Net change in forest area measures forest expansion minus deforestation\",\n      caption = \"Data source: Our World in Data\",\n      fill = \"Net Forest Conversion (hectares)\"\n    ) +\n    theme_void() +\n    theme(\n      legend.position = \"bottom\",\n      legend.direction = \"horizontal\",\n      plot.title = element_text(size = 19, face = \"bold\", hjust = 0.5),\n      plot.subtitle = element_text(size = 15, color = \"azure4\", hjust = 0.5),\n      plot.caption = element_text(size = 12, color = \"azure4\", hjust = 0.95)\n    ) +\n    guides(\n      fill = guide_legend(\n        nrow = 1,\n        direction = \"horizontal\",\n        title.position = \"top\",\n        title.hjust = 0.5,\n        label.position = \"bottom\",\n        label.hjust = 1,\n        label.vjust = 1,\n        label.theme = element_text(lineheight = 0.25, size = 9),\n        keywidth = 1,\n        keyheight = 0.5\n      )\n    )\n  return(world_plot)\n}\n```\n:::\n\n\n-   Creating an animation of the generated plots\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Forest Conversion Analysis {.smaller auto-animate=\"true\"}\n\n-   Notable positive shifts occurred in the 2000s and 2010s in particular countries.\n-   *South America* and *Africa* continues to bear the brunt of deforestation.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/savingas_GIF-1.gif){fig-align='center'}\n:::\n:::\n\n\n## Challenges faced {auto-animate=\"true\"}\n\n-   Lack of geographical data in the dataset.\n\n-   Handling `NA` data and countries with no data.\n\n-   Getting the legend right!\n\n-   Rendering issue due to too much `ink` being used on the plot.\n\n## Question 2 {.smaller}\n\n**How has the consumption of Soybean in Brazil changed over time, and how does it impact the afforestation or deforestation rates?**\n\n-   Our central question revolves around the historical evolution of soybean consumption and its potential implications for afforestation and deforestation rates in this vital agricultural region.\n\n-   Our visual representation of this data employs the versatility of ggplot, particularly using `geom_line()` and `geom_point()` methods to construct time series plots.\n\n-   These plots provide a dynamic illustration of the trends in soybean production in Brazil, shedding light on the growth and fluctuations in this vital agricultural sector.\n\n## Approach {.smaller}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Pre-processing of soybean and forest data\"}\n#Function to pre-process the total_forest, soybean_use and forest_area datasets\n#Input : total_forest- tibble\n#        soybean_use- tibble\n#        forest_area- tibble\n#Output: soybean_brazil- tibble\n#        forest_brazil- tibble\n\n\n#Cleaning total_forest table\ntotal_forest_cleaned <- clean_names(total_forest)\n\n#Making a new column to calculate the total soybean consumption\nsoybean <- soybean_use |>\n  mutate(total = human_food + animal_feed + processed)\n#Some countries do not have consumption, and shows as 0. \n#Removing the rows if total=0\nsoybean <- subset(soybean, total != 0)\n\n# Filter data for Brazil\nsoybean_brazil <- soybean |>\n  filter(entity == \"Brazil\", year>= 1990&year<=2013)\n\n# Filter data for Brazil forest: \nforest_brazil <- forest_area |>\n  filter(entity == \"Brazil\",year>=1990&year<=2013)\n\n#Finding total forest coverage per year\ntotal_forest_world <- total_forest_cleaned |>\n  filter(year >= 1990, year <= 2013, entity == \"World\") |>\n  group_by(year)\n\n# Left join to add total world forest coverage to the forest_brazil dataset\nforest_brazil <- forest_brazil |>\n  left_join(total_forest_world, by = \"year\")\n \n#Finding actual total coverage for Brazil (percentage * total)\nforest_brazil <- forest_brazil|>\n  mutate(forest_area_brazil = forest_area.x * forest_area.y / 100)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plotting of soybean consumption in Brazil\"}\n#Code for creating the time series plot\n#Used the soybean_brazil dataset created earlier as a data source\n#using year and total as x and y axis for first layer\n#Plotting points over line to increase visibility as second layer\n#Manual fill to show trend as positive\n#Input: year and total- numeric\n#Output: plot_soybean_brazil- plot object\n\n\n# Create a line plot for Brazil soybean consumption\nplot_soybean_brazil <- ggplot(soybean_brazil, aes(x = year, y = total, color = \"Brazil\")) +\n  geom_line(linewidth = 2) +    #Plotting line plot of series\n  geom_point(color = \"#6E8B3D\") +  #Plotting points for clarity\n  labs(x = \"\\nYear\", \n       y = \"Total (in lb)\\n\", \n       title = \"Soybean consumption in Brazil\\n\", \n       caption = \"Jon Harmon | TidyTuesday\") +\n  theme_minimal() +\n  theme(legend.position = \"none\", plot.title = element_text(size = 15)) +\n  scale_y_continuous(labels = scales::label_number(scale = 1e-06, suffix = \"M\")) + #Cleaning long numbers\n  scale_color_manual(values = c(\"Brazil\" = \"#a6d96a\")) +\n  scale_x_continuous(limits = c(1990, 2013), breaks = seq(1990, 2013, by = 2))    #Defining year range\n\n#Saving plot to location, and defining custom width\nggsave(plot_soybean_brazil, \n       filename = \"images/q2/plot_soybean_brazil.jpg\", \n       height   = 8, \n       width    = 15, \n       unit     = \"in\", \n       dpi      = 120)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plotting of forest coverage in Brazil\"}\n#Code for creating the time series plot\n#Used the forest_brazil dataset created earlier as a data source\n#using year and total as x and y axis for first layer for line plot\n#Plotting points over line to increase visibility as second layer\n#Manual fill to show trend as negative\n#Input: year and forest_area_brazil- numeric\n#Output: plot_soybean_brazil- plot object\n\n\n# Create a line plot for Brazil with points\nplot_forest_brazil <- ggplot(forest_brazil, aes(x = year, y = forest_area_brazil, color = \"Brazil\")) +\n  geom_line(linewidth = 2) +      #Plotting line plot of series\n  geom_point(color=\"#fdae61\") +   #Plotting points for clarity\n  labs(x = \"\\nYear\", \n       y = \"Forest coverage (in hectares)\\n\", \n       title = \"Forest coverage in Brazil\\n\", \n       caption= \"Jon Harmon | TidyTuesday\") +\n  theme_minimal() +\n  theme(legend.position = \"none\", plot.title = element_text(size = 15)) +\n  scale_color_manual(values = c(\"Brazil\" = \"#fee08b\"))+\n  scale_x_continuous(limits = c(1990, 2013), breaks = seq(1990, 2013, by = 2))+    #Defining year range\n  scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = \"M\"))    #Cleaning long numbers\n\nggsave(plot_forest_brazil, \n       filename = \"images/q2/plot_forest_brazil.jpg\", \n       height   = 8, \n       width    = 15, \n       unit     = \"in\", \n       dpi      = 120)\n```\n:::\n\n\n## Outcome {.smaller auto-animate=\"true\"}\n\n-   Animation of soybean usage\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/q2plot_forest_anim-1.gif){fig-align='center'}\n:::\n:::\n\n\n## Outcome {.smaller auto-animate=\"true\"}\n\n-   Animation of forest coverage\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/q2plot_brazil_anim-1.gif){fig-align='center'}\n:::\n:::\n\n\n## Analysis {.smaller}\n\n-   The visualizations provide a clear depiction of the steady increase in soybean consumption in Brazil.\n\n-   The data shows a remarkable increase, from approximately 16.4 million pounds of soybeans in 1990 to a staggering 36.87 million pounds in 2013.\n\n-   The forest coverage in Brazil dropped from 588 million hectares in 1990 to 507 million hectares in 2013, representing a significant loss of 81 million hectares of forest land during this time.\n\n-   This reduction in forest area is indicative of the environmental impact in Brazil.\n\n-   The correlation between rising soybean consumption and decreasing forest coverage in Brazil underscores the need for sustainable agricultural practices and conservation efforts.\n\n## Challenges faced {.smaller}\n\n-   Lack of total forest coverage for the world.\n\n-   Animation and frame rate selection.\n\n-   Error in data type and rendering method selection of gif during animation.\n\n## I am Groot!?\n\n::: columns\n::: {.column width=\"50%\"}\n[**Thank you!**]{style=\"font-size: 46px; color: #546747; font-weight: bold;text-align: center\"}\n\n![](images/presentation/groot_hi.gif){fig-align=\"center\" width=\"350\"}\n:::\n\n::: {.column width=\"50%\"}\n[**Any Questions?**]{style=\"font-size: 46px; color: #546747; font-weight: bold;text-align: center\"}\n\n![Groot Source: https://gifer.com](images/presentation/groot_focused.gif){fig-align=\"center\" width=\"450\"}\n:::\n:::\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}